find_package(Doxygen REQUIRED)
find_package(Sphinx REQUIRED)

#This will be the main output of our command
set(DOXYGEN_INPUT_DIR ${PROJECT_SOURCE_DIR}/include)
set(DOXYGEN_OUTPUT_DIR ${PROJECT_SOURCE_DIR}/doc/build)
set(DOXYGEN_INDEX_FILE ${DOXYGEN_OUTPUT_DIR}/index.html)
set(DOXYFILE_IN ${CMAKE_CURRENT_SOURCE_DIR}/doxygen/Doxyfile.in)
set(DOXYFILE_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)

#Replace variables inside @@ with the current values
configure_file(${DOXYFILE_IN} ${DOXYFILE_OUT}  @ONLY)

file(MAKE_DIRECTORY ${DOXYGEN_OUTPUT_DIR})  
add_custom_command(OUTPUT ${DOXYGEN_INDEX_FILE}
                   DEPENDS ${HEADERS}
                   COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYFILE_OUT}
                   MAIN_DEPENDENCY ${DOXYFILE_OUT} ${DOXYFILE_IN}
                   COMMENT "Generating docs"
                   VERBATIM
                   )

add_custom_target(doc ALL DEPENDS ${DOXYGEN_INDEX_FILE}) 
 
## Sphinx
# set(SPHINX_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/sphinx)
# set(SPHINX_BUILD ${CMAKE_CURRENT_BINARY_DIR}/sphinx)
# set(SPHINX_INDEX_FILE ${SPHINX_BUILD}/index.html) 


# add_custom_command(OUTPUT ${SPHINX_INDEX_FILE}
#                    COMMAND 
#                      ${SPHINX_EXECUTABLE} -b html
#                      # Tell Breathe where to find the Doxygen output
#                      -Dbreathe_projects.ioh=${DOXYGEN_OUTPUT_DIR}/xml
#                    ${SPHINX_SOURCE} ${SPHINX_BUILD}
#                    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
#                    DEPENDS
#                    # Other docs files you want to track should go here (or in some variable)
#                    ${SPHINX_SOURCE}/index.rst 
#                    ${DOXYGEN_INDEX_FILE}
#                    MAIN_DEPENDENCY ${SPHINX_SOURCE}/conf.py
#                    COMMENT "Generating documentation with Sphinx")

# add_custom_target(Sphinx ALL DEPENDS ${SPHINX_INDEX_FILE})

# include(GNUInstallDirs)
# install(DIRECTORY ${SPHINX_BUILD}
#     DESTINATION ${CMAKE_INSTALL_DOCDIR})
